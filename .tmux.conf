set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g default-terminal "screen-256color"

set -g status-left '#[fg=colour0,bg=colour82,bold] #H #[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour234,nobold]'
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour25,bg=colour39,noreverse,bold] #I » #W #[fg=colour39,bg=colour234,nobold]"
set -g status-right "#[fg=colour15,bg=colour238]  #(date +'%a %F %H:%M') "
set -g status-interval 15


# Fix terminal stuff
set -g status on
#set -g status-utf8 on

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
unbind x

set -g lock-command vlock
set -g lock-after-time 1800

# screen ^C c
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
#unbind ^@
#bind ^@ next-window
#unbind ^N
#bind ^N next-window
#unbind " "
#bind " " next-window
#unbind n
#bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
#unbind ^H
#bind ^H previous-window
#unbind ^P
#bind ^P previous-window
#unbind p
#bind p previous-window
#unbind BSpace
#bind BSpace previous-window

# windows ^W w
#unbind ^W
#bind ^W list-windows
#unbind w
#bind w list-windows

# quit \
#unbind \
#bind \ confirm-before "kill-server"

# kill K k
#unbind K
#bind K confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client

# More straight forward key bindings for splitting
unbind %
bind | split-window -h
#bind v split-window -h
unbind '"'
bind - split-window -v
#bind / command-prompt "split-window 'exec %%'"
#bind S command-prompt "new-window -n %1 'ssh %1'"

# History
set -g history-limit 4096

# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

# powerline setup
#set-option -g status-bg colour235
#set-option -g status on
#set-option -g status-interval 2
#set-option -g status-utf8 on
#set-option -g status-justify "centre"
#set-option -g status-left-length 60
#set-option -g status-right-length 90
#set-option -g status-left "#(~/tmux-powerline/powerline.sh left)"
#set-option -g status-right "#(~/tmux-powerline/powerline.sh right)"

#set-window-option -g window-status-current-format "#[fg=colour24, bg=colour235]#[fg=colour255, bg=colour24] #I | #W #[fg=colour24, bg=colour235]"
#set-window-option -g window-status-format "#[fg=colour250, bg=colour235] #I|#W "

# Notifying if other windows has activities
setw -g monitor-activity on
set -g visual-activity off

# Clock
setw -g clock-mode-style 24

# Panes
#set -g mouse-resize-pane on
#set -g mouse-select-pane on

# Windows
#set -g mouse-select-window on

# " windowlist -b
unbind '"'
bind '"' choose-window

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

setw -g display-panes-time 2000
bind ^s display-panes \; command-prompt "swap-pane -s %1"

set -g detach-on-destroy off
setw -g alternate-screen off

bind M-l next-layout
set -g terminal-overrides 'xterm:colors=256'

